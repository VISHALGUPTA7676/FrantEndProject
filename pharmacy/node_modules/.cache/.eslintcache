[{"E:\\FrantEndProject\\pharmacy\\src\\index.js":"1","E:\\FrantEndProject\\pharmacy\\src\\App.js":"2","E:\\FrantEndProject\\pharmacy\\src\\reportWebVitals.js":"3","E:\\FrantEndProject\\pharmacy\\src\\components\\Dashboard.js":"4","E:\\FrantEndProject\\pharmacy\\src\\components\\Footer.js":"5","E:\\FrantEndProject\\pharmacy\\src\\components\\AddSupplier.js":"6","E:\\FrantEndProject\\pharmacy\\src\\components\\Login.js":"7","E:\\FrantEndProject\\pharmacy\\src\\components\\ProductAdd.js":"8","E:\\FrantEndProject\\pharmacy\\src\\components\\AddProductGroup.js":"9","E:\\FrantEndProject\\pharmacy\\src\\components\\ProductCategory.js":"10","E:\\FrantEndProject\\pharmacy\\src\\components\\ProductManufacturer.js":"11","E:\\FrantEndProject\\pharmacy\\src\\components\\PurchaseDetails.js":"12","E:\\FrantEndProject\\pharmacy\\src\\components\\Header.js":"13","E:\\FrantEndProject\\pharmacy\\src\\components\\ShowSupplier.js":"14","E:\\FrantEndProject\\pharmacy\\src\\components\\EditSupplier.js":"15","E:\\FrantEndProject\\pharmacy\\src\\components\\ShowManufacturer.js":"16","E:\\FrantEndProject\\pharmacy\\src\\components\\EditManufacture.js":"17","E:\\FrantEndProject\\pharmacy\\src\\components\\ShowProduct.js":"18","E:\\FrantEndProject\\pharmacy\\src\\components\\EditProduct.js":"19","E:\\FrantEndProject\\pharmacy\\src\\components\\EditProductGroup.js":"20","E:\\FrantEndProject\\pharmacy\\src\\components\\ShowProductGroup.js":"21","E:\\FrantEndProject\\pharmacy\\src\\components\\EditCategory.js":"22","E:\\FrantEndProject\\pharmacy\\src\\components\\ShowCategory.js":"23","E:\\FrantEndProject\\pharmacy\\src\\components\\ManufacturerForm.js":"24"},{"size":535,"mtime":1695716435002,"results":"25","hashOfConfig":"26"},{"size":3312,"mtime":1697479362882,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1694414274972,"results":"28","hashOfConfig":"26"},{"size":1428,"mtime":1695885496271,"results":"29","hashOfConfig":"26"},{"size":197,"mtime":1695750625686,"results":"30","hashOfConfig":"26"},{"size":5626,"mtime":1697483950809,"results":"31","hashOfConfig":"26"},{"size":1401,"mtime":1695990172759,"results":"32","hashOfConfig":"26"},{"size":11743,"mtime":1697453992096,"results":"33","hashOfConfig":"26"},{"size":4565,"mtime":1697472143581,"results":"34","hashOfConfig":"26"},{"size":4536,"mtime":1697472176381,"results":"35","hashOfConfig":"26"},{"size":4538,"mtime":1697444426941,"results":"36","hashOfConfig":"26"},{"size":26497,"mtime":1697615532746,"results":"37","hashOfConfig":"26"},{"size":5548,"mtime":1697479392476,"results":"38","hashOfConfig":"26"},{"size":8678,"mtime":1696697910480,"results":"39","hashOfConfig":"26"},{"size":7610,"mtime":1697444474925,"results":"40","hashOfConfig":"26"},{"size":9086,"mtime":1697441578370,"results":"41","hashOfConfig":"26"},{"size":5944,"mtime":1697444388952,"results":"42","hashOfConfig":"26"},{"size":8298,"mtime":1697451687652,"results":"43","hashOfConfig":"26"},{"size":14172,"mtime":1697453082903,"results":"44","hashOfConfig":"26"},{"size":5921,"mtime":1697456941500,"results":"45","hashOfConfig":"26"},{"size":9114,"mtime":1697470870197,"results":"46","hashOfConfig":"26"},{"size":5646,"mtime":1697473547940,"results":"47","hashOfConfig":"26"},{"size":9089,"mtime":1697472303564,"results":"48","hashOfConfig":"26"},{"size":3019,"mtime":1697490769061,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"1s672la",{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"53"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"53"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\FrantEndProject\\pharmacy\\src\\index.js",[],[],[],"E:\\FrantEndProject\\pharmacy\\src\\App.js",[],[],[],"E:\\FrantEndProject\\pharmacy\\src\\reportWebVitals.js",[],[],"E:\\FrantEndProject\\pharmacy\\src\\components\\Dashboard.js",["129"],[],"import React, { useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nconst Dashboard = () => {\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"user\") == null) {\r\n            navigate(\"/\")\r\n        }\r\n    }, [])\r\n    const logout=()=>{\r\n        localStorage.removeItem(\"user\");\r\n        navigate(\"/\")\r\n    }\r\n    \r\n    //const userDataString = localStorage.getItem('user');\r\n\r\n    // Parse the JSON string to an object\r\n    //const userData = JSON.parse(userDataString);\r\n    //alert(userData.id);\r\n    return (\r\n        <div>\r\n            \r\n            <button onClick={logout}>LOGOUT</button>\r\n            <div className=\"container\">\r\n                <h2>Data table</h2>\r\n                <table className=\"styled-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>E-mail</th>\r\n                            <th>Password</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            {/* <td>1</td>\r\n                            <td>{username}</td>\r\n                            <td>{password}</td> */}\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n           \r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Dashboard","E:\\FrantEndProject\\pharmacy\\src\\components\\Footer.js",[],[],"E:\\FrantEndProject\\pharmacy\\src\\components\\AddSupplier.js",[],[],"E:\\FrantEndProject\\pharmacy\\src\\components\\Login.js",["130"],[],"import React, { useEffect, useState } from 'react';\r\nimport './LoginForm.css'; // Import the CSS file\r\nimport axios from 'axios'\r\nimport { useNavigate } from 'react-router-dom';\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [data, setData] = useState({\r\n    username: \"\",\r\n    password: \"\"\r\n  })\r\n  const handleInputChange = (e) => {\r\n    setData({ ...data, [e.target.name]: e.target.value })\r\n  }\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const res = await axios.post(\"http://localhost:8080/api/auth/signin\", data);\r\n    if (res.status === 200) {\r\n      localStorage.setItem(\"user\", JSON.stringify(res.data));\r\n      navigate(\"/dashboard\");\r\n\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"user\") === null) {\r\n      navigate(\"/\")\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <form className=\"login-form\" onSubmit={handleSubmit}>\r\n      <div>\r\n       \r\n        <h2>Login Page</h2>\r\n        <label>Username:</label>\r\n        <input\r\n          type=\"text\"\r\n          name='username'\r\n          onChange={(e) => handleInputChange(e)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label>Password:</label>\r\n        <input\r\n          type=\"password\"\r\n          name='password'\r\n          onChange={(e) => handleInputChange(e)}\r\n        />\r\n      </div>\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","E:\\FrantEndProject\\pharmacy\\src\\components\\ProductAdd.js",["131","132","133","134"],[],"E:\\FrantEndProject\\pharmacy\\src\\components\\AddProductGroup.js",[],[],"E:\\FrantEndProject\\pharmacy\\src\\components\\ProductCategory.js",[],[],"E:\\FrantEndProject\\pharmacy\\src\\components\\ProductManufacturer.js",[],[],"E:\\FrantEndProject\\pharmacy\\src\\components\\PurchaseDetails.js",["135","136","137","138","139"],[],"import React, { useState, useEffect } from \"react\";\r\nimport \"../Components_css/PurchaseDetails.css\";\r\nimport axios from \"axios\";\r\nimport { json } from \"react-router-dom\";\r\n\r\nconst PurchaseDetails = () => {\r\n  const [options, setOptions] = useState([]);\r\n\r\n  const userDataString = localStorage.getItem(\"user\");\r\n  // Parse the JSON string to an object\r\n  const userData = JSON.parse(userDataString);\r\n  // today's date code\r\n  const [date, setDate] = useState(new Date());\r\n  const [supplierData, setSupplierData] = useState([]);\r\n  const [product, setProduct] = useState([]);\r\n\r\n\r\n\r\n  const [purchaseData,setPurchaseData] = useState({\r\n    purchasePONumber:\"\",\r\n    billType:\"\",\r\n    purchaseDate:new Date(),\r\n    supplier:\"\",\r\n    supplierId:\"\",\r\n    billNumber:\"\",\r\n    netPurchaseAmount:0.0,\r\n    totalCgst:0.0,\r\n    totalSgst:0.0,\r\n    discountInPercentageOnPurchase:0.0,\r\n    discountInAmountOnPurchase:0.0,\r\n    roundOfOnBill:0.0,\r\n    netPayableAmount:0.0,\r\n    paidAmount:0.0,\r\n    dueAmount:0.0,\r\n    userId:userData.id,\r\n    PurchaseDetails:[\r\n      {\r\n        productName:\"\",\r\n        productId:\"\",\r\n        productHSNCode:\"\",\r\n        productBatch:\"\",\r\n        expiryDate:\"\",\r\n        productPackaging:0,\r\n        productQuantity:0,\r\n        productFreeQuantity:0,\r\n        productMRP:0.0,\r\n        productPurchaseRate:0.0,\r\n        productDiscount:0,\r\n        productBaseAmount:0.0,\r\n        productCGST:0.0,\r\n        cGSTInAmount:0.0,\r\n        productSGST:0.0,\r\n        sGSTInAmount:0.0,\r\n        productTotalAmtWithGST:0.0,\r\n        userId:userData.id\r\n\r\n      }\r\n    ]\r\n\r\n  })\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setPurchaseData({\r\n      ...purchaseData,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const handlePurchaseDetailsChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const updatedPurchaseDetails = [...purchaseData.PurchaseDetails];\r\n    updatedPurchaseDetails[index] = {\r\n      ...updatedPurchaseDetails[index],\r\n      [name]: value\r\n    };\r\n    setPurchaseData({\r\n      ...purchaseData,\r\n      PurchaseDetails: updatedPurchaseDetails\r\n    });\r\n    alert(index)\r\n   alert( JSON.stringify(purchaseData)  ) \r\n  };\r\n\r\n  let index1 = 3;\r\n  function increaseIndexNumber(){\r\n    index1= index1+1;\r\n  }\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    fillPaymentType();\r\n    findSupplier();\r\n    findProduct();\r\n    if (userData.id === null) {\r\n    }\r\n  }, []);\r\n\r\n\r\n\r\n  const fillPaymentType = async () => {\r\n    try {\r\n      const res = await axios.get(\r\n        \"http://localhost:8080/pharmacy/getPaymentMode/\" + userData.id,\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + userData.accessToken,\r\n          },\r\n        }\r\n      );\r\n\r\n      if (res.status === 200) {\r\n        const datta = res.data;\r\n        // console.log(JSON.stringify(res.data));\r\n        const selectOptions = datta.map((item) => ({\r\n          value: item.paymentMode,\r\n          label: item.paymentMode,\r\n        }));\r\n        setOptions(selectOptions);\r\n        // console.log(selectOptions);\r\n      } else {\r\n        // Handle other response statuses (e.g., 4xx or 5xx errors)\r\n        console.error(\"Request failed with status:\", res.status.toUpperCase());\r\n      }\r\n    } catch (error) {\r\n      // Handle network errors or exceptions here\r\n      console.error(\"An error occurred:\", error);\r\n    }\r\n  };\r\n  \r\n\r\n  const findSupplier = async () => {\r\n    try {\r\n      const res = await axios.get(\r\n        \"http://localhost:8080/pharmacy/supplier/getSupplier/\" + userData.id,\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + userData.accessToken,\r\n          },\r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        const data = res.data;\r\n        console.log(data);\r\n        setSupplierData(res.data);\r\n        console.log(\"Hi  +  \" + JSON.stringify(supplierData));\r\n\r\n      }\r\n\r\n    } catch (error) {\r\n      // Handle network errors or exceptions here\r\n      console.error(\"An error occurred:\", error);\r\n    }\r\n  };\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [manufacturers, setManufacturers] = useState([]);\r\n  const [selectedManufacturer, setSelectedManufacturer] = useState(null);\r\n\r\n  const filterManufacturers = (input) => {\r\n    return supplierData.filter(manufacturer =>\r\n      //manufacturer.name.toLowerCase().includes(input.toLowerCase()) && input.length >= 3\r\n      manufacturer.supplierName && manufacturer.supplierName.toLowerCase().includes(input.toLowerCase()) && input.length >= 3\r\n    );\r\n  };\r\n\r\n  const handleInputChange11 = (event) => {\r\n    const value = event.target.value;\r\n    setInputValue(value);\r\n    setManufacturers(filterManufacturers(value));\r\n  };\r\n\r\n  const handleSelectManufacturer = (manufacturer) => {\r\n    setSelectedManufacturer(manufacturer);\r\n    setInputValue(manufacturer.supplierName);\r\n    setManufacturers([]);\r\n  };\r\n\r\n\r\n  const findProduct = async () => {\r\n    try {\r\n      const res = await axios.get(\r\n        \"http://localhost:8080/pharmacy/product/showProduct/\" + userData.id,\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + userData.accessToken,\r\n          },\r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        const data = res.data;\r\n        console.log(data);\r\n        setProduct(res.data);\r\n        console.log(\"Hi  +  \" + JSON.stringify(product));\r\n\r\n      }\r\n\r\n    } catch (error) {\r\n      // Handle network errors or exceptions here\r\n      console.error(\"An error occurred:\", error);\r\n    }\r\n  };\r\n  const handleDateChange = (event) => {\r\n    setDate(new Date(event.target.value));\r\n  };\r\n\r\n  const formattedDate = date.toISOString().substr(0, 10);\r\n\r\n  // table data code\r\n \r\n\r\n  \r\n  \r\n\r\n\r\n\r\n\r\n  const autocompleteStyles = {\r\n    position: \"absolute\",\r\n    zIndex: 1,\r\n    maxHeight: \"200px\",\r\n\r\n  };\r\n\r\n\r\n  \r\n  return (\r\n    <div className=\"container p-2\" id=\"supplier\">\r\n      <h5 className=\"text-muted\">ADD NEW PURCHASE DETAILS</h5>\r\n\r\n      <form >\r\n        <div className=\"card\" style={{ position: \"inherit\" }}>\r\n          <h5 className=\"card-title  text-light p-1\">PURCHASE DETAILS</h5>\r\n\r\n          <div className=\"card-body\">\r\n            <label className=\"my-2\">BILL TYPE</label>\r\n\r\n            <select\r\n              style={{ width: \"auto\", paddingLeft: \"12px\" }}\r\n              name=\"billType\"\r\n              className=\"my-3 mx-5 \"\r\n            >\r\n              <option value=\"\" disabled selected>\r\n                Select Product Category\r\n              </option>\r\n              {options.map((option) => (\r\n                <option key={option.id} value={option.value}>\r\n                  {option.label}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <label className=\"my-3\" style={{ marginLeft: \"92px\" }}>\r\n              PO NO\r\n            </label>\r\n            <input\r\n              className=\"my-3 mx-2\"\r\n              type=\"text\"\r\n              name=\"purchasePONumber\"\r\n              placeholder=\"Search P.O Number\"\r\n            />\r\n            <label className=\"my-3\" style={{ marginLeft: \"92px\" }}>\r\n              DATE\r\n            </label>\r\n            <input\r\n              className=\"my-3 mx-2 \"\r\n              type=\"date\"\r\n              name=\"purchaseDate\"\r\n              style={{ paddingLeft: \"12px\" }}\r\n              value={formattedDate}\r\n              onChange={handleDateChange}\r\n            />\r\n            <br />\r\n            <label className=\"my-3\">NAME</label>\r\n            <input\r\n              className=\"my-3 mx-5\"\r\n              type=\"text\"\r\n              name=\"supplier\"\r\n              value={inputValue}\r\n              onChange={handleInputChange11}\r\n              placeholder=\"Enter Supplier Name\"\r\n              id=\"autocomplete-input\"\r\n              autocomplete=\"off\"\r\n\r\n            />\r\n\r\n            {selectedManufacturer && (\r\n\r\n\r\n              <input type=\"hidden\" name=\"supplierId\" value={selectedManufacturer.id} />\r\n\r\n            )}\r\n           \r\n\r\n            <div\r\n              className=\"autocomplete-list\"\r\n              id=\"autocomplete-list\"\r\n              style={autocompleteStyles}\r\n            >\r\n              {manufacturers.length > 0 && (\r\n                <ul style={{ listStyle: \"none\", width: \"500px\" }} className=\"dropdown\">\r\n                  {manufacturers.map(manufacturer => (\r\n                    <li key={manufacturer.id} onClick={() => handleSelectManufacturer(manufacturer)}>\r\n                      {manufacturer.supplierName}\r\n\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              )}\r\n            </div>\r\n            <label className=\"my-3\">BILL NO</label>\r\n            <input className=\"my-3 mx-5\" type=\"text\" name=\"billNumber\"/>\r\n            <label className=\"my-3\">DISC(%)</label>\r\n            <input\r\n              className=\"my-3 mx-5\"\r\n              type=\"text\"\r\n              placeholder=\"Supplier Disc(%)\"\r\n            />\r\n            \r\n            <label className=\"my-3\">FREE QTY GST</label>\r\n            <input className=\"mx-1\" type=\"checkbox\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <h5 className=\"card-title text-light p-1\">MEDICINE DETAILS</h5>\r\n          <div className=\"card-body\">\r\n            <table className=\"table\">\r\n              <thead>\r\n                <tr className=\"table-head\">\r\n                  <th className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\", textAlign: \"center\" }}>No.</th>\r\n                  <th className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\", textAlign: \"center\" }}>PRODUCT NAME</th>\r\n                  <th className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\", textAlign: \"center\" }}>HSN</th>\r\n                  <th className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\", textAlign: \"center\" }}>BACTH</th>\r\n                  <th className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\", textAlign: \"center\" }}>EXP DT.</th>\r\n                  <th className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\", textAlign: \"center\", marginBottom: \"0PX\" }}>PKG</th>\r\n                  <th className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\", textAlign: \"center\", marginBottom: \"0PX\" }}>QTY</th>\r\n                  <th className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\", textAlign: \"center\", marginBottom: \"0PX\" }}>FREE QTY</th>\r\n                  <th className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\", textAlign: \"center\", marginBottom: \"0PX\" }}>M.R.P</th>\r\n                  <th className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\", textAlign: \"center\", marginBottom: \"0PX\" }}>RATE</th>\r\n\r\n                  <th className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\", textAlign: \"center\", marginBottom: \"0PX\" }}>DISC</th>\r\n                  <th className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\", textAlign: \"center\", marginBottom: \"0PX\" }}>BASE AMT</th>\r\n\r\n                  <th className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\", textAlign: \"center\", marginBottom: \"0PX\" }}>C.GST(%)</th>\r\n                  <th className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\", textAlign: \"center\", marginBottom: \"0PX\" }}>C.GST(RS)</th>\r\n                  <th className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\", textAlign: \"center\", marginBottom: \"0PX\" }}>S.GST(%)</th>\r\n                  <th className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\", textAlign: \"center\", marginBottom: \"0PX\" }}>S.GST(RS)</th>\r\n                  <th className=\"head-cell\">AMT</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n\r\n                {\r\n                \r\n                purchaseData.PurchaseDetails.map((product,index) => (\r\n\r\n<tr key={index}>\r\n<td className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", width: \"1px\", textAlign: \"center\", fontSize: \"11px\" }}>1</td>\r\n<td className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\" }}><input type=\"text\"  onChange={ (e) =>handlePurchaseDetailsChange(e,index)} value={product.productName}  name={'PurchaseDetails[${index}].productName'} placeholder=\"NAME\" style={{ width: \"auto\", padding: \"0px\", fontSize: \"11px\", margin: \"0PX\", paddingLeft: \"1px\" }} /></td>\r\n<input type=\"hidden\" name=\"productId\" />\r\n\r\n<td className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\" }}><input name=\"productHSNCode\" type=\"text\" style={{ width: \"auto\", padding: \"0px\", fontSize: \"11px\", margin: \"0PX\", paddingLeft: \"1px\" }} /></td>\r\n<td className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\" }}><input name=\"productBatch\" value=\"BATCH\" type=\"text\" style={{ width: \"100%\", padding: \"0px\", fontSize: \"11px\", margin: \"0PX\", paddingLeft: \"1px\" }} /></td>\r\n<td className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\" }}><input name=\"expiryDate\" value=\"12/2022\" type=\"text\" style={{ width: \"100%\", padding: \"0px\", fontSize: \"11px\", margin: \"0PX\", paddingLeft: \"1px\" }} /></td>\r\n<td className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\" }}><input name=\"productPackaging\" value=\"10\" type=\"text\" style={{ width: \"100%\", padding: \"0px\", fontSize: \"11px\", margin: \"0PX\", paddingLeft: \"1px\" }} /></td>\r\n<td className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\" }}><input name=\"productQuantity\" value=\"10\" type=\"text\" style={{ width: \"100%\", padding: \"0px\", fontSize: \"11px\", margin: \"0PX\", paddingLeft: \"1px\" }} /></td>\r\n<td className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\" }}><input name=\"productFreeQuantity\" value=\"10\" type=\"text\" style={{ width: \"100%\", padding: \"0px\", fontSize: \"11px\", margin: \"0PX\", paddingLeft: \"1px\" }} /></td>\r\n<td className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\" }}><input name=\"productMRP\" value=\"10\" type=\"text\" style={{ width: \"100%\", padding: \"0px\", fontSize: \"11px\", margin: \"0PX\", paddingLeft: \"1px\" }} /></td>\r\n<td className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\" }}><input name=\"productPurchaseRate\" value=\"10\" type=\"text\" style={{ width: \"100%\", padding: \"0px\", fontSize: \"11px\", margin: \"0PX\", paddingLeft: \"1px\" }} /></td>\r\n<td className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\" }}><input name=\"productDiscount\" value=\"10\" type=\"text\" style={{ width: \"100%\", padding: \"0px\", fontSize: \"11px\", margin: \"0PX\", paddingLeft: \"1px\" }} /></td>\r\n\r\n<td className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\" }}><input name=\"productBaseAmount\" readOnly value=\"10\" type=\"text\" style={{ width: \"100%\", padding: \"0px\", fontSize: \"11px\", margin: \"0PX\", paddingLeft: \"1px\" }} /></td>\r\n\r\n<td className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\" }}><input name=\"productCGST\" value=\"10\" type=\"text\" style={{ width: \"100%\", padding: \"0px\", fontSize: \"11px\", margin: \"0PX\", paddingLeft: \"1px\" }} /></td>\r\n<td className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\" }}><input name=\"cGSTInAmount\" hidden value=\"10\" type=\"text\" style={{ width: \"100%\", padding: \"0px\", fontSize: \"11px\", margin: \"0PX\", paddingLeft: \"1px\" }} /></td>\r\n<td className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\" }}><input name=\"productSGST\" value=\"10\" type=\"text\" style={{ width: \"100%\", padding: \"0px\", fontSize: \"11px\", margin: \"0PX\", paddingLeft: \"1px\" }} /></td>\r\n<td className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\" }}><input name=\"sGSTInAmount\" hidden value=\"10\" type=\"text\" style={{ width: \"100%\", padding: \"0px\", fontSize: \"11px\", margin: \"0PX\", paddingLeft: \"1px\" }} /></td>\r\n<td className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\" }}><input name=\"productTotalAmtWithGST\" value=\"10\" type=\"text\" style={{ width: \"100%\", padding: \"0px\", fontSize: \"11px\", margin: \"0PX\", paddingLeft: \"1px\" }} /></td>\r\n\r\n</tr>\r\n                \r\n                ))}\r\n\r\n                <tr>\r\n                  <td className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", width: \"1px\", textAlign: \"center\", fontSize: \"11px\" }}>1</td>\r\n                  <td className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\" }}><input type=\"text\" name=\"productName\" placeholder=\"NAME\" style={{ width: \"auto\", padding: \"0px\", fontSize: \"11px\", margin: \"0PX\", paddingLeft: \"1px\" }} /></td>\r\n                  <input type=\"hidden\" name=\"productId\" />\r\n\r\n                  <td className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\" }}><input name=\"productHSNCode\" type=\"text\" style={{ width: \"auto\", padding: \"0px\", fontSize: \"11px\", margin: \"0PX\", paddingLeft: \"1px\" }} /></td>\r\n                  <td className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\" }}><input name=\"productBatch\" value=\"BATCH\" type=\"text\" style={{ width: \"100%\", padding: \"0px\", fontSize: \"11px\", margin: \"0PX\", paddingLeft: \"1px\" }} /></td>\r\n                  <td className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\" }}><input name=\"expiryDate\" value=\"12/2022\" type=\"text\" style={{ width: \"100%\", padding: \"0px\", fontSize: \"11px\", margin: \"0PX\", paddingLeft: \"1px\" }} /></td>\r\n                  <td className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\" }}><input name=\"productPackaging\" value=\"10\" type=\"text\" style={{ width: \"100%\", padding: \"0px\", fontSize: \"11px\", margin: \"0PX\", paddingLeft: \"1px\" }} /></td>\r\n                  <td className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\" }}><input name=\"productQuantity\" value=\"10\" type=\"text\" style={{ width: \"100%\", padding: \"0px\", fontSize: \"11px\", margin: \"0PX\", paddingLeft: \"1px\" }} /></td>\r\n                  <td className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\" }}><input name=\"productFreeQuantity\" value=\"10\" type=\"text\" style={{ width: \"100%\", padding: \"0px\", fontSize: \"11px\", margin: \"0PX\", paddingLeft: \"1px\" }} /></td>\r\n                  <td className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\" }}><input name=\"productMRP\" value=\"10\" type=\"text\" style={{ width: \"100%\", padding: \"0px\", fontSize: \"11px\", margin: \"0PX\", paddingLeft: \"1px\" }} /></td>\r\n                  <td className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\" }}><input name=\"productPurchaseRate\" value=\"10\" type=\"text\" style={{ width: \"100%\", padding: \"0px\", fontSize: \"11px\", margin: \"0PX\", paddingLeft: \"1px\" }} /></td>\r\n                  <td className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\" }}><input name=\"productDiscount\" value=\"10\" type=\"text\" style={{ width: \"100%\", padding: \"0px\", fontSize: \"11px\", margin: \"0PX\", paddingLeft: \"1px\" }} /></td>\r\n\r\n                  <td className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\" }}><input name=\"productBaseAmount\" readOnly value=\"10\" type=\"text\" style={{ width: \"100%\", padding: \"0px\", fontSize: \"11px\", margin: \"0PX\", paddingLeft: \"1px\" }} /></td>\r\n\r\n                  <td className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\" }}><input name=\"productCGST\" value=\"10\" type=\"text\" style={{ width: \"100%\", padding: \"0px\", fontSize: \"11px\", margin: \"0PX\", paddingLeft: \"1px\" }} /></td>\r\n                  <td className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\" }}><input name=\"cGSTInAmount\" hidden value=\"10\" type=\"text\" style={{ width: \"100%\", padding: \"0px\", fontSize: \"11px\", margin: \"0PX\", paddingLeft: \"1px\" }} /></td>\r\n                  <td className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\" }}><input name=\"productSGST\" value=\"10\" type=\"text\" style={{ width: \"100%\", padding: \"0px\", fontSize: \"11px\", margin: \"0PX\", paddingLeft: \"1px\" }} /></td>\r\n                  <td className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\" }}><input name=\"sGSTInAmount\" hidden value=\"10\" type=\"text\" style={{ width: \"100%\", padding: \"0px\", fontSize: \"11px\", margin: \"0PX\", paddingLeft: \"1px\" }} /></td>\r\n                  <td className=\"head-cell\" style={{ padding: \"0px\", margin: \"0px\", fontSize: \"11px\" }}><input name=\"productTotalAmtWithGST\" value=\"10\" type=\"text\" style={{ width: \"100%\", padding: \"0px\", fontSize: \"11px\", margin: \"0PX\", paddingLeft: \"1px\" }} /></td>\r\n\r\n                </tr>\r\n                {/* {supplierData.map((product) => (\r\n                  <tr key={product.id}>\r\n                    <td className=\"table-cell\" style={{width:\"1px\"}}>1</td>\r\n                    <td className=\"table-cell\">\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"enetre name\"\r\n                        style={{ width: \"100%\", boxSizing: \"border-box\" }}\r\n                      />\r\n                    </td>\r\n                    <td className=\"table-cell\">{product.hsn}</td>\r\n                    <td className=\"table-cell\">{product.batch}</td>\r\n                    <td className=\"table-cell\">{product.expDate}</td>\r\n                    <td className=\"table-cell\">{product.pkg}</td>\r\n                    <td className=\"table-cell\">{product.qty}</td>\r\n                    <td className=\"table-cell\">{product.freeQty}</td>\r\n                    <td className=\"table-cell\">{product.mrp}</td>\r\n                    <td className=\"table-cell\">{product.rate}</td>\r\n                    <td className=\"table-cell\">{product.discPercent}</td>\r\n                    <td className=\"table-cell\">{product.disc}</td>\r\n                    <td className=\"table-cell\">{product.base}</td>\r\n                    <td className=\"table-cell\">{product.amt}</td>\r\n                    <td className=\"table-cell\">{product.cgstPercent}</td>\r\n                    <td className=\"table-cell\">{product.cgstRs}</td>\r\n                    <td className=\"table-cell\">{product.sgstPercent}</td>\r\n                    <td className=\"table-cell\">{product.sgstRs}</td>\r\n                    <td className=\"table-cell\">{product.totalAmt}</td>\r\n                  </tr>\r\n                ))} */}\r\n              </tbody>\r\n            </table>\r\n            <div className=\"totalset\">\r\n              \r\n              <label className=\"my-3\">FREE QTY</label>\r\n              <input\r\n                className=\"my-3 mx-3 noneset\"\r\n                type=\"text\"\r\n                readOnly=\"true\"\r\n                \r\n              />\r\n              <label className=\"my-3\">C.GST-% TOTAL </label>\r\n              <input\r\n                className=\"my-3 mx-3 noneset\"\r\n                type=\"text\"\r\n                name=\"totalCgst\"\r\n                readOnly=\"true\"\r\n                \r\n              />\r\n              <label className=\"my-3\">S.GST-% TOTAL</label>\r\n              <input\r\n                className=\"my-3 mx-3 noneset\"\r\n                type=\"text\"\r\n                readOnly=\"true\"\r\n                name=\"totalSgst\"\r\n                \r\n              />\r\n              <label className=\"my-3\">NET TOTAL AMT</label>\r\n              <input\r\n                className=\"my-3 mx-3 noneset\"\r\n                type=\"text\"\r\n                readOnly=\"true\"\r\n                name=\"netPurchaseAmount\"\r\n                \r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <h5 className=\"card-title text-light p-1\">PAYMENT DETAILS</h5>\r\n          <div className=\"card-body\">\r\n            <div className=\"totalset\">\r\n              <label className=\"my-3\">PURCHASE AMT</label>\r\n              <input\r\n                className=\"my-3 mx-5  noneset\"\r\n                type=\"number\"\r\n                \r\n                readOnly=\"true\"\r\n              />\r\n              <label className=\"my-3\">DISC. TOTAL</label>\r\n              <input\r\n                className=\"my-3 mx-5  noneset\"\r\n                type=\"number\"\r\n                \r\n                readOnly=\"true\"\r\n              />\r\n              <label className=\"my-3\">C.GST TOTAL</label>\r\n              <input\r\n                className=\"my-3 mx-5  noneset\"\r\n                type=\"number\"\r\n                \r\n              />\r\n              <label className=\"my-3\">S.GST TOTAL</label>\r\n              <input\r\n                className=\"my-3 mx-5  noneset\"\r\n                type=\"number\"\r\n                \r\n              />\r\n              <label className=\"my-3\">DISC(%)</label>\r\n              <input className=\"my-3 mx-5  \" name=\"discountInPercentageOnPurchase\" type=\"number\" />\r\n              <label className=\"my-3\">DISC IN RS.</label>\r\n              <input\r\n                className=\"my-3 mx-5  \"\r\n                type=\"number\"\r\n                name=\"discountInAmountOnPurchase\"\r\n                \r\n                \r\n              />\r\n              <label className=\"my-3\">ROUND OFF</label>\r\n              <input\r\n                className=\"my-3 mx-5  noneset\"\r\n                type=\"number\"\r\n                name=\"roundOfOnBill\"\r\n                \r\n                \r\n              />\r\n              <label className=\"my-3\">NET PAYABLE AMT</label>\r\n              <input\r\n                className=\"my-3 mx-5  noneset\"\r\n                type=\"number\"\r\n                name=\"netPayableAmount\"\r\n                \r\n              />\r\n              <label className=\"my-3\">PAID AMT</label>\r\n              <input\r\n                className=\"my-3 mx-5  noneset\"\r\n                type=\"number\"\r\n                name=\"paidAmount\"\r\n                \r\n                \r\n              />\r\n              <label className=\"my-3\">DUE AMT</label>\r\n              <input\r\n                className=\"my-3 mx-5  noneset\"\r\n                type=\"number\"\r\n                name=\"dueAmount\"\r\n                \r\n\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"buttonset\">\r\n            <input\r\n              className=\"m-5 button bg-dark text-light\"\r\n              type=\"submit\"\r\n              value=\"SUBMIT\"\r\n            />\r\n            <input\r\n              className=\"m-5 button bg-dark text-light\"\r\n              type=\"button\"\r\n              value=\"CANCEL\"\r\n              \r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PurchaseDetails;\r\n","E:\\FrantEndProject\\pharmacy\\src\\components\\Header.js",[],[],"E:\\FrantEndProject\\pharmacy\\src\\components\\ShowSupplier.js",["140","141","142"],[],"E:\\FrantEndProject\\pharmacy\\src\\components\\EditSupplier.js",["143"],[],"import React, { useState ,useEffect} from 'react';\r\nimport \"../Components_css/Supplier.css\"\r\n\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nimport { useParams } from 'react-router-dom';\r\n\r\nexport const EditSupplier = () => {\r\n    const { id } = useParams();\r\n    const userDataString = localStorage.getItem('user');\r\n  // Parse the JSON string to an object\r\n  const userData = JSON.parse(userDataString);\r\n  const [formData, setFormData] = useState({\r\n    id:\"\",\r\n    supplierName: \"\",\r\n    supplierEmail: \"\",\r\n    supplierNumber: \"\",\r\n    supplierGstNumber: \"\",\r\n    drupLicenceNumber: \"\",\r\n    address: \"\",\r\n    open_balance: 0,\r\n    status: false,\r\n    userId: userData.id\r\n\r\n  });\r\n\r\n  useEffect(() => {\r\n    loadSupplierData();\r\n    if (userData.id === null) {\r\n\r\n    }\r\n}, [])\r\n\r\nconst loadSupplierData = async () => {\r\n    try {\r\n      const res = await axios.get(\r\n        \"http://localhost:8080/pharmacy/supplier/getSupplier/\"+id+\"/\"+userData.id ,\r\n        {\r\n          headers: {\r\n            'Authorization':  'Bearer ' + userData.accessToken,\r\n          }\r\n        }\r\n      );\r\n\r\n\r\n      if (res.status === 200) {\r\n        const response1 = res.data;\r\n        console.log(JSON.stringify(res.data));\r\n        const response = response1[0];\r\n        setFormData({\r\n            id: response.id,\r\n            supplierName: response.supplierName,\r\n            supplierEmail: response.supplierEmail,\r\n            supplierNumber: response.supplierNumber,\r\n            supplierGstNumber: response.supplierGstNumber,\r\n            drupLicenceNumber: response.drupLicenceNumber,\r\n            address: response.address,\r\n            open_balance: response.open_balance,\r\n            status: response.status,\r\n            userId: response.userId\r\n          });\r\n          \r\n       \r\n       \r\n      } else {\r\n        // Handle other response statuses (e.g., 4xx or 5xx errors)\r\n        console.error(\"Request failed with status:\", res.status.toUpperCase());\r\n      }\r\n    } catch (error) {\r\n      // Handle network errors or exceptions here\r\n      console.error(\"An error occurred:\", error);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const handleSubmit = async (e) => {\r\n    try {\r\n      e.preventDefault();\r\n      const res = await axios.post(\r\n        \"http://localhost:8080/pharmacy/supplier/updateSupplier\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            'Authorization':  'Bearer ' + userData.accessToken ,\r\n          }\r\n        }\r\n      );\r\n\r\n\r\n      if (res.status === 200) {\r\n        console.log(res.data);\r\n        showMessage(res.data);\r\n\r\n      } else {\r\n        // Handle other response statuses (e.g., 4xx or 5xx errors)\r\n        console.error(\"Request failed with status:\", res.status.toUpperCase());\r\n      }\r\n    } catch (error) {\r\n      // Handle network errors or exceptions here\r\n      console.error(\"An error occurred:\", error);\r\n    }\r\n  }\r\n\r\n  function showMessage(message) {\r\n    document.getElementById(\"massage\").innerHTML = \"<h5>\" + message.toUpperCase() + \"</h5>\";\r\n    // Set a timeout to remove the span element after 10 seconds (10000 milliseconds)\r\n    setTimeout(function () {\r\n      // Remove the span element after 10 seconds\r\n      document.getElementById(\"massage\").innerHTML = \"\";\r\n    }, 5000);\r\n  }\r\n\r\n\r\n  const handleInputChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value })\r\n  }\r\n  return (\r\n    // <div>\r\n    //   <h2>Supplier ID: {id}</h2>\r\n    //   {/* Rest of your component */}\r\n    // </div>\r\n\r\n\r\n    <div id=\"supplier\">\r\n      <form onSubmit={handleSubmit}>\r\n        <span style={{\r\n          textAlign: 'center',\r\n          textDecoration: 'solid',\r\n          color: 'red',\r\n          textShadow: '1px 1px 1px #000000' // Adding a color to the text shadow\r\n        }}><span id=\"massage\" colSpan=\"1\"></span></span>\r\n        <table id=\"supplierTab\">\r\n\r\n          <thead>\r\n            <tr id=\"headingSupplier\" >\r\n              <th colSpan=\"2\"><h5>UPADATE SUPPLIER</h5></th>\r\n              <th colSpan=\"2\" id=\"showList\"><button><Link to=\"/supplier/showSupplier\">SHOW LIST</Link></button></th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"2\" id=\"titalheader\">SUPPLIER DETAILS</th>\r\n              <th colSpan=\"2\" id=\"titalheader1\">CONTECT DETAILS</th>\r\n            </tr>\r\n\r\n\r\n          </thead>\r\n          <tbody>\r\n\r\n            <tr>\r\n              <td id=\"tital\">Name</td>\r\n              <td><input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"supplierName\"\r\n                value={formData.supplierName}\r\n                onChange={(e) => handleInputChange(e)}\r\n                required /></td>\r\n              <td id=\"tital1\">Contact Number </td>\r\n              <td><input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"supplierNumber\"\r\n                value={formData.supplierNumber}\r\n                onChange={(e) => handleInputChange(e)}\r\n                required\r\n              /></td>\r\n            </tr>\r\n            <tr>\r\n              <td id=\"tital\">GST NUMBER</td>\r\n              <td><input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"supplierGstNumber\"\r\n                value={formData.supplierGstNumber}\r\n                onChange={(e) => handleInputChange(e)}\r\n                required\r\n              /></td>\r\n              <td id=\"tital1\">EMAIL ID </td>\r\n              <td><input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"supplierEmail\"\r\n                value={formData.supplierEmail}\r\n                onChange={(e) => handleInputChange(e)}\r\n                required\r\n\r\n              /></td>\r\n            </tr>\r\n            <tr>\r\n              <td id=\"tital\">Drug License No </td>\r\n              <td><input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"drupLicenceNumber\"\r\n                value={formData.drupLicenceNumber}\r\n                onChange={(e) => handleInputChange(e)}\r\n                required\r\n              /></td>\r\n              <td id=\"tital1\">ADDRESS</td>\r\n              <td><input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"address\"\r\n                value={formData.address}\r\n                onChange={(e) => handleInputChange(e)}\r\n                required\r\n              /></td>\r\n            </tr>\r\n            <tr>\r\n              <td id=\"tital\">OPEN BALANCE </td>\r\n              <td><input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"open_balance\"\r\n                value={formData.open_balance}\r\n                onChange={(e) => handleInputChange(e)}\r\n\r\n              /></td>\r\n              <td id=\"tital1\">STATUS</td>\r\n              <td id=\"radioButton\"><input type=\"radio\" id=\"html\" className='HelloRadioButton' name=\"status\"\r\n                onChange={(e) => handleInputChange(e)} value=\"true\" checked={formData.status === true}/>\r\n                &nbsp;<label htmlFor=\"html\">Enable</label> &nbsp;&nbsp;&nbsp;&nbsp;\r\n                <input type=\"radio\" id=\"css\" value=\"false\" name=\"status\"\r\n                  onChange={(e) => handleInputChange(e)} checked={formData.status === false}/>\r\n                &nbsp;<label htmlFor=\"css\">Disable</label>\r\n              </td>\r\n            </tr>\r\n            <tr id=\"submitTr\">\r\n              <th colSpan=\"4\" id=\"actionButton\"><button type=\"submit\">SUBMIT</button></th>\r\n            </tr>\r\n\r\n          </tbody>\r\n\r\n        </table>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n",[],"E:\\FrantEndProject\\pharmacy\\src\\components\\ShowManufacturer.js",["144"],[],"E:\\FrantEndProject\\pharmacy\\src\\components\\EditManufacture.js",["145"],[],"E:\\FrantEndProject\\pharmacy\\src\\components\\ShowProduct.js",["146"],[],"E:\\FrantEndProject\\pharmacy\\src\\components\\EditProduct.js",["147","148","149","150"],[],"E:\\FrantEndProject\\pharmacy\\src\\components\\EditProductGroup.js",["151"],[],"E:\\FrantEndProject\\pharmacy\\src\\components\\ShowProductGroup.js",["152"],[],"E:\\FrantEndProject\\pharmacy\\src\\components\\EditCategory.js",["153","154"],[],"E:\\FrantEndProject\\pharmacy\\src\\components\\ShowCategory.js",["155"],[],"E:\\FrantEndProject\\pharmacy\\src\\components\\ManufacturerForm.js",[],[],{"ruleId":"156","severity":1,"message":"157","line":11,"column":8,"nodeType":"158","endLine":11,"endColumn":10,"suggestions":"159"},{"ruleId":"156","severity":1,"message":"157","line":28,"column":6,"nodeType":"158","endLine":28,"endColumn":8,"suggestions":"160"},{"ruleId":"156","severity":1,"message":"161","line":23,"column":6,"nodeType":"158","endLine":23,"endColumn":8,"suggestions":"162"},{"ruleId":"163","severity":1,"message":"164","line":28,"column":61,"nodeType":"165","messageId":"166","endLine":28,"endColumn":62},{"ruleId":"163","severity":1,"message":"164","line":59,"column":70,"nodeType":"165","messageId":"166","endLine":59,"endColumn":71},{"ruleId":"163","severity":1,"message":"164","line":90,"column":70,"nodeType":"165","messageId":"166","endLine":90,"endColumn":71},{"ruleId":"167","severity":1,"message":"168","line":4,"column":10,"nodeType":"169","messageId":"170","endLine":4,"endColumn":14},{"ruleId":"167","severity":1,"message":"171","line":62,"column":9,"nodeType":"169","messageId":"170","endLine":62,"endColumn":26},{"ruleId":"167","severity":1,"message":"172","line":86,"column":12,"nodeType":"169","messageId":"170","endLine":86,"endColumn":31},{"ruleId":"156","severity":1,"message":"173","line":99,"column":6,"nodeType":"158","endLine":99,"endColumn":8,"suggestions":"174"},{"ruleId":"175","severity":1,"message":"176","line":360,"column":197,"nodeType":"177","messageId":"178","endLine":360,"endColumn":236},{"ruleId":"167","severity":1,"message":"171","line":13,"column":11,"nodeType":"169","messageId":"170","endLine":13,"endColumn":28},{"ruleId":"156","severity":1,"message":"179","line":26,"column":8,"nodeType":"158","endLine":26,"endColumn":10,"suggestions":"180"},{"ruleId":"167","severity":1,"message":"181","line":41,"column":19,"nodeType":"169","messageId":"170","endLine":41,"endColumn":24},{"ruleId":"156","severity":1,"message":"179","line":35,"column":4,"nodeType":"158","endLine":35,"endColumn":6,"suggestions":"182"},{"ruleId":"156","severity":1,"message":"183","line":22,"column":8,"nodeType":"158","endLine":22,"endColumn":10,"suggestions":"184"},{"ruleId":"156","severity":1,"message":"183","line":37,"column":8,"nodeType":"158","endLine":37,"endColumn":10,"suggestions":"185"},{"ruleId":"156","severity":1,"message":"186","line":19,"column":8,"nodeType":"158","endLine":19,"endColumn":10,"suggestions":"187"},{"ruleId":"156","severity":1,"message":"188","line":26,"column":6,"nodeType":"158","endLine":26,"endColumn":8,"suggestions":"189"},{"ruleId":"163","severity":1,"message":"164","line":77,"column":61,"nodeType":"165","messageId":"166","endLine":77,"endColumn":62},{"ruleId":"163","severity":1,"message":"164","line":108,"column":70,"nodeType":"165","messageId":"166","endLine":108,"endColumn":71},{"ruleId":"163","severity":1,"message":"164","line":139,"column":70,"nodeType":"165","messageId":"166","endLine":139,"endColumn":71},{"ruleId":"156","severity":1,"message":"190","line":37,"column":8,"nodeType":"158","endLine":37,"endColumn":10,"suggestions":"191"},{"ruleId":"156","severity":1,"message":"190","line":24,"column":8,"nodeType":"158","endLine":24,"endColumn":10,"suggestions":"192"},{"ruleId":"193","severity":1,"message":"194","line":12,"column":31,"nodeType":"169","messageId":"195","endLine":12,"endColumn":45},{"ruleId":"156","severity":1,"message":"196","line":19,"column":4,"nodeType":"158","endLine":19,"endColumn":6,"suggestions":"197"},{"ruleId":"156","severity":1,"message":"198","line":21,"column":8,"nodeType":"158","endLine":21,"endColumn":10,"suggestions":"199"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["200"],["201"],"React Hook useEffect has missing dependencies: 'fillProductCategory', 'fillProductGroup', 'fillProductManufacturer', and 'userData.id'. Either include them or remove the dependency array.",["202"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-unused-vars","'json' is defined but never used.","Identifier","unusedVar","'handleInputChange' is assigned a value but never used.","'increaseIndexNumber' is defined but never used.","React Hook useEffect has missing dependencies: 'fillPaymentType', 'findProduct', 'findSupplier', and 'userData.id'. Either include them or remove the dependency array.",["203"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","React Hook useEffect has missing dependencies: 'loadSupplierData' and 'userData.id'. Either include them or remove the dependency array.",["204"],"'datta' is assigned a value but never used.",["205"],"React Hook useEffect has missing dependencies: 'loadManufacturer' and 'userData.id'. Either include them or remove the dependency array.",["206"],["207"],"React Hook useEffect has missing dependencies: 'loadProdcuts' and 'userData.id'. Either include them or remove the dependency array.",["208"],"React Hook useEffect has missing dependencies: 'fetchProduct', 'fillProductCategory', 'fillProductGroup', 'fillProductManufacturer', and 'userData.id'. Either include them or remove the dependency array.",["209"],"React Hook useEffect has missing dependencies: 'loadProductGroup' and 'userData.id'. Either include them or remove the dependency array.",["210"],["211"],"no-use-before-define","'userDataString' was used before it was defined.","usedBeforeDefined","React Hook useEffect has missing dependencies: 'loadProductCategory' and 'userData.id'. Either include them or remove the dependency array.",["212"],"React Hook useEffect has missing dependencies: 'loadProductcategory' and 'userData.id'. Either include them or remove the dependency array.",["213"],{"desc":"214","fix":"215"},{"desc":"214","fix":"216"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"221","fix":"223"},{"desc":"224","fix":"225"},{"desc":"224","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"231","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},"Update the dependencies array to be: [navigate]",{"range":"238","text":"239"},{"range":"240","text":"239"},"Update the dependencies array to be: [fillProductCategory, fillProductGroup, fillProductManufacturer, userData.id]",{"range":"241","text":"242"},"Update the dependencies array to be: [fillPaymentType, findProduct, findSupplier, userData.id]",{"range":"243","text":"244"},"Update the dependencies array to be: [loadSupplierData, userData.id]",{"range":"245","text":"246"},{"range":"247","text":"246"},"Update the dependencies array to be: [loadManufacturer, userData.id]",{"range":"248","text":"249"},{"range":"250","text":"249"},"Update the dependencies array to be: [loadProdcuts, userData.id]",{"range":"251","text":"252"},"Update the dependencies array to be: [fetchProduct, fillProductCategory, fillProductGroup, fillProductManufacturer, userData.id]",{"range":"253","text":"254"},"Update the dependencies array to be: [loadProductGroup, userData.id]",{"range":"255","text":"256"},{"range":"257","text":"256"},"Update the dependencies array to be: [loadProductCategory, userData.id]",{"range":"258","text":"259"},"Update the dependencies array to be: [loadProductcategory, userData.id]",{"range":"260","text":"261"},[280,282],"[navigate]",[811,813],[688,690],"[fillProductCategory, fillProductGroup, fillProductManufacturer, userData.id]",[2427,2429],"[fillPaymentType, findProduct, findSupplier, userData.id]",[801,803],"[loadSupplierData, userData.id]",[809,811],[576,578],"[loadManufacturer, userData.id]",[1125,1127],[558,560],"[loadProdcuts, userData.id]",[749,751],"[fetchProduct, fillProductCategory, fillProductGroup, fillProductManufacturer, userData.id]",[1118,1120],"[loadProductGroup, userData.id]",[587,589],[430,432],"[loadProductCategory, userData.id]",[570,572],"[loadProductcategory, userData.id]"]