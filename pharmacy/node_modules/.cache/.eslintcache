[{"E:\\FrantEndProject\\pharmacy\\src\\index.js":"1","E:\\FrantEndProject\\pharmacy\\src\\App.js":"2","E:\\FrantEndProject\\pharmacy\\src\\reportWebVitals.js":"3","E:\\FrantEndProject\\pharmacy\\src\\components\\Dashboard.js":"4","E:\\FrantEndProject\\pharmacy\\src\\components\\Footer.js":"5","E:\\FrantEndProject\\pharmacy\\src\\components\\AddSupplier.js":"6","E:\\FrantEndProject\\pharmacy\\src\\components\\Login.js":"7","E:\\FrantEndProject\\pharmacy\\src\\components\\ProductAdd.js":"8","E:\\FrantEndProject\\pharmacy\\src\\components\\AddProductGroup.js":"9","E:\\FrantEndProject\\pharmacy\\src\\components\\ProductCategory.js":"10","E:\\FrantEndProject\\pharmacy\\src\\components\\ProductManufacturer.js":"11","E:\\FrantEndProject\\pharmacy\\src\\components\\PurchaseDetails.js":"12","E:\\FrantEndProject\\pharmacy\\src\\components\\Header.js":"13"},{"size":535,"mtime":1695716435002,"results":"14","hashOfConfig":"15"},{"size":1713,"mtime":1696152750951,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1694414274972,"results":"17","hashOfConfig":"15"},{"size":1428,"mtime":1695885496271,"results":"18","hashOfConfig":"15"},{"size":197,"mtime":1695750625686,"results":"19","hashOfConfig":"15"},{"size":5629,"mtime":1695991332201,"results":"20","hashOfConfig":"15"},{"size":1401,"mtime":1695990172759,"results":"21","hashOfConfig":"15"},{"size":12010,"mtime":1696165630803,"results":"22","hashOfConfig":"15"},{"size":4474,"mtime":1695997116059,"results":"23","hashOfConfig":"15"},{"size":4558,"mtime":1695998031759,"results":"24","hashOfConfig":"15"},{"size":4580,"mtime":1696007803072,"results":"25","hashOfConfig":"15"},{"size":15532,"mtime":1696320708754,"results":"26","hashOfConfig":"15"},{"size":5554,"mtime":1696158571990,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1s672la",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"31"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"31"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"E:\\FrantEndProject\\pharmacy\\src\\index.js",[],[],[],"E:\\FrantEndProject\\pharmacy\\src\\App.js",[],[],"E:\\FrantEndProject\\pharmacy\\src\\reportWebVitals.js",[],[],"E:\\FrantEndProject\\pharmacy\\src\\components\\Dashboard.js",["71"],[],"import React, { useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nconst Dashboard = () => {\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"user\") == null) {\r\n            navigate(\"/\")\r\n        }\r\n    }, [])\r\n    const logout=()=>{\r\n        localStorage.removeItem(\"user\");\r\n        navigate(\"/\")\r\n    }\r\n    \r\n    //const userDataString = localStorage.getItem('user');\r\n\r\n    // Parse the JSON string to an object\r\n    //const userData = JSON.parse(userDataString);\r\n    //alert(userData.id);\r\n    return (\r\n        <div>\r\n            \r\n            <button onClick={logout}>LOGOUT</button>\r\n            <div className=\"container\">\r\n                <h2>Data table</h2>\r\n                <table className=\"styled-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>E-mail</th>\r\n                            <th>Password</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            {/* <td>1</td>\r\n                            <td>{username}</td>\r\n                            <td>{password}</td> */}\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n           \r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Dashboard","E:\\FrantEndProject\\pharmacy\\src\\components\\Footer.js",[],[],"E:\\FrantEndProject\\pharmacy\\src\\components\\AddSupplier.js",[],[],"E:\\FrantEndProject\\pharmacy\\src\\components\\Login.js",["72"],[],"import React, { useEffect, useState } from 'react';\r\nimport './LoginForm.css'; // Import the CSS file\r\nimport axios from 'axios'\r\nimport { useNavigate } from 'react-router-dom';\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [data, setData] = useState({\r\n    username: \"\",\r\n    password: \"\"\r\n  })\r\n  const handleInputChange = (e) => {\r\n    setData({ ...data, [e.target.name]: e.target.value })\r\n  }\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const res = await axios.post(\"http://localhost:8080/api/auth/signin\", data);\r\n    if (res.status === 200) {\r\n      localStorage.setItem(\"user\", JSON.stringify(res.data));\r\n      navigate(\"/dashboard\");\r\n\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"user\") === null) {\r\n      navigate(\"/\")\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <form className=\"login-form\" onSubmit={handleSubmit}>\r\n      <div>\r\n       \r\n        <h2>Login Page</h2>\r\n        <label>Username:</label>\r\n        <input\r\n          type=\"text\"\r\n          name='username'\r\n          onChange={(e) => handleInputChange(e)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label>Password:</label>\r\n        <input\r\n          type=\"password\"\r\n          name='password'\r\n          onChange={(e) => handleInputChange(e)}\r\n        />\r\n      </div>\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","E:\\FrantEndProject\\pharmacy\\src\\components\\ProductAdd.js",["73","74","75","76"],[],"import React, { useState, useEffect } from 'react';\r\nimport \"../Components_css/Supplier.css\"\r\nimport './LoginForm.css'; // Import the CSS file\r\nimport axios from 'axios'\r\n\r\nconst ProductAdd = () => {\r\n\r\n  const userDataString = localStorage.getItem('user');\r\n  // Parse the JSON string to an object\r\n  const userData = JSON.parse(userDataString);\r\n  const [options, setOptions] = useState([]);\r\n  const [option1, setOption1] = useState([]);\r\n  const [option2, setOption2] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    fillProductGroup();\r\n    fillProductManufacturer();\r\n    fillProductCategory();\r\n    if (userData.id === null) {\r\n\r\n    }\r\n  }, [])\r\n\r\n  const fillProductCategory = async () => {\r\n    try {\r\n      const res = await axios.get(\r\n        \"http://localhost:8080/pharmacy/product/getCategory\"+\"/\"+userData.id,\r\n        {\r\n          headers: {\r\n            'Authorization': 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJWaXNoYWxfR3VwdGEiLCJpYXQiOjE2OTYxNDg5NDksImV4cCI6MTY5NjIzNTM0OX0.V6BQKlIE9uoVQOZA_PbgXKXVLqEi_0DvZEOl_22WAf0',\r\n          }\r\n        }\r\n      );\r\n\r\n\r\n      if (res.status === 200) {\r\n        const datta = res.data;\r\n        console.log(JSON.stringify(res.data));\r\n        const selectOptions = datta.map(item => ({\r\n          value: item.categoryName,\r\n          label: item.categoryName\r\n        }));\r\n        setOption1(selectOptions);\r\n        console.log(selectOptions);\r\n      } else {\r\n        // Handle other response statuses (e.g., 4xx or 5xx errors)\r\n        console.error(\"Request failed with status:\", res.status.toUpperCase());\r\n      }\r\n    } catch (error) {\r\n      // Handle network errors or exceptions here\r\n      console.error(\"An error occurred:\", error);\r\n    }\r\n  }\r\n\r\n  const fillProductManufacturer = async () => {\r\n    try {\r\n      const res = await axios.get(\r\n        \"http://localhost:8080/pharmacy/manufacturer/getManufacturer\"+\"/\"+userData.id,\r\n        {\r\n          headers: {\r\n            'Authorization': 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJWaXNoYWxfR3VwdGEiLCJpYXQiOjE2OTYxNDg5NDksImV4cCI6MTY5NjIzNTM0OX0.V6BQKlIE9uoVQOZA_PbgXKXVLqEi_0DvZEOl_22WAf0',\r\n          }\r\n        }\r\n      );\r\n\r\n\r\n      if (res.status === 200) {\r\n        const datta = res.data;\r\n        console.log(JSON.stringify(res.data));\r\n        const selectOption2 = datta.map(item => ({\r\n          value: item.manufacturerName,\r\n          label: item.manufacturerName\r\n        }));\r\n        setOption2(selectOption2);\r\n        console.log(selectOption2);\r\n      } else {\r\n        // Handle other response statuses (e.g., 4xx or 5xx errors)\r\n        console.error(\"Request failed with status:\", res.status.toUpperCase());\r\n      }\r\n    } catch (error) {\r\n      // Handle network errors or exceptions here\r\n      console.error(\"An error occurred:\", error);\r\n    }\r\n  }\r\n\r\n  const fillProductGroup = async () => {\r\n    try {\r\n      const res = await axios.get(\r\n        \"http://localhost:8080/pharmacy/productGroup/getProductGroup\"+\"/\"+userData.id,\r\n        {\r\n          headers: {\r\n            'Authorization': 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJWaXNoYWxfR3VwdGEiLCJpYXQiOjE2OTYxNDg5NDksImV4cCI6MTY5NjIzNTM0OX0.V6BQKlIE9uoVQOZA_PbgXKXVLqEi_0DvZEOl_22WAf0',\r\n          }\r\n        }\r\n      );\r\n\r\n\r\n      if (res.status === 200) {\r\n        const datta = res.data;\r\n        console.log(JSON.stringify(res.data));\r\n        const selectOptions = datta.map(item => ({\r\n          value: item.groupName,\r\n          label: item.groupName\r\n        }));\r\n        setOptions(selectOptions);\r\n        console.log(selectOptions);\r\n      } else {\r\n        // Handle other response statuses (e.g., 4xx or 5xx errors)\r\n        console.error(\"Request failed with status:\", res.status.toUpperCase());\r\n      }\r\n    } catch (error) {\r\n      // Handle network errors or exceptions here\r\n      console.error(\"An error occurred:\", error);\r\n    }\r\n  }\r\n\r\n  function showMessage(message) {\r\n    document.getElementById(\"massage\").innerHTML = \"<h5>\" + message.toUpperCase() + \"</h5>\";\r\n    // Set a timeout to remove the span element after 10 seconds (10000 milliseconds)\r\n    setTimeout(function () {\r\n      // Remove the span element after 10 seconds\r\n      document.getElementById(\"massage\").innerHTML = \"\";\r\n    }, 5000);\r\n  }\r\n\r\n\r\n  const [formData, setFormData] = useState({\r\n    productName: \"\",\r\n    productDescription: \"\",\r\n    productGroup: \"\",\r\n    productCategory: \"\",\r\n    productManufacturer: \"\",\r\n    setMinProductQuantity: 0,\r\n    setMaxProductQuantity: 0,\r\n    productPackaging: 0,\r\n    productHSNCode: \"\",\r\n    productCGST: 0.00,\r\n    productSGST: 0.00,\r\n    productStoreRackNumber: 0,\r\n    productGenericCode: \"\",\r\n    productStatus: true,\r\n    userId: userData.id\r\n\r\n  });\r\n  const handleInputChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    try {\r\n      e.preventDefault();\r\n      const res = await axios.post(\r\n        \"http://localhost:8080/pharmacy/product/addProduct\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            'Authorization': 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJWaXNoYWxfR3VwdGEiLCJpYXQiOjE2OTU5ODY2MDMsImV4cCI6MTY5NjA3MzAwM30.8PwVzU4nTWtNWTa_lk0yfk0PEfKz3rhnbN-J9hyOr0g',\r\n          }\r\n        }\r\n      );\r\n\r\n\r\n      if (res.status === 200) {\r\n        console.log(res.data);\r\n        showMessage(res.data);\r\n\r\n      } else {\r\n        // Handle other response statuses (e.g., 4xx or 5xx errors)\r\n        console.error(\"Request failed with status:\", res.status.toUpperCase());\r\n      }\r\n    } catch (error) {\r\n      // Handle network errors or exceptions here\r\n      console.error(\"An error occurred:\", error);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div id=\"supplier\">\r\n      <form onSubmit={handleSubmit}>\r\n\r\n        <table id=\"supplierTab\">\r\n\r\n          <thead>\r\n            <tr id=\"headingSupplier\" >\r\n              <th colSpan=\"2\"><h5>ADD NEW PRODUCT</h5></th>\r\n              <th colSpan=\"2\" id=\"showList\"><button>SHOW PRODUCT LIST</button></th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"2\" id=\"titalheader\"> <span id=\"massage\" style={{\r\n                textAlign: 'center',\r\n                textDecoration: 'solid',\r\n                color: 'red',\r\n                textShadow: '1px 1px 1px #000000' // Adding a color to the text shadow\r\n              }}></span></th>\r\n              <th colSpan=\"2\" id=\"titalheader1\"></th>\r\n            </tr>\r\n\r\n\r\n          </thead>\r\n          <tbody>\r\n\r\n            <tr>\r\n              <td id=\"tital\"><b>Product Name</b></td>\r\n              <td><input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"productName\"\r\n                onChange={(e) => handleInputChange(e)}\r\n                required \r\n                placeholder='Enter The Product Name'\r\n                /></td>\r\n              <td id=\"tital1\"><b>Packaging</b></td>\r\n              <td><input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                name=\"productPackaging\"\r\n                onChange={(e) => handleInputChange(e)}\r\n                required\r\n                min={1}\r\n              /></td>\r\n            </tr>\r\n            <tr>\r\n              <td id=\"tital\"><b>Description</b></td>\r\n              <td>\r\n                <textarea className=\"form-control\" name=\"productDescription\" cols=\"60\" onChange={(e) => handleInputChange(e)} placeholder='Enter About product'></textarea>\r\n              </td>\r\n              <td id=\"tital1\"><b>Product Generic Code</b> </td>\r\n              <td><input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"productGenericCode\"\r\n                onChange={(e) => handleInputChange(e)}\r\n                required\r\n\r\n              /></td>\r\n            </tr>\r\n            <tr>\r\n              <td id=\"tital\"><b>Rack Number</b></td>\r\n              <td><input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                name=\"productStoreRackNumber\"\r\n                onChange={(e) => handleInputChange(e)}\r\n                required \r\n                min={1}/></td>\r\n              <td id=\"tital1\"><b>Product HSN Code</b></td>\r\n              <td><input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"productHSNCode\"\r\n                onChange={(e) => handleInputChange(e)}\r\n                required\r\n              /></td>\r\n            </tr>\r\n            <tr>\r\n              <td id=\"tital\"><b>C-GST %</b></td>\r\n              <td><input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                name=\"productCGST\"\r\n                onChange={(e) => handleInputChange(e)}\r\n                required /></td>\r\n              <td id=\"tital1\"><b>S-GST %</b></td>\r\n              <td><input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                name=\"productSGST\"\r\n                onChange={(e) => handleInputChange(e)}\r\n                required\r\n              /></td>\r\n            </tr>\r\n            <tr>\r\n              <td id=\"tital\"><b>Product Min QTY</b></td>\r\n              <td><input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                name=\"productStoreRackNumber\"\r\n                onChange={(e) => handleInputChange(e)}\r\n                required /></td>\r\n              <td id=\"tital1\"><b>Product Max QTY</b></td>\r\n              <td><input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                name=\"productHSNCode\"\r\n                onChange={(e) => handleInputChange(e)}\r\n                required\r\n              /></td>\r\n            </tr>\r\n            <tr>\r\n              <td id=\"tital\"><b>Product Category</b></td>\r\n              <td>\r\n\r\n                <select id=\"cars\" name=\"productCategory\" className=\"form-control form-select\">\r\n                <option value=\"\" disabled selected>Select Product Category</option>\r\n                  {option1.map(option => (\r\n                    <option key={option.id} value={option.value}>\r\n                        {option.label}\r\n                    </option>\r\n                ))}\r\n                </select>\r\n              </td>\r\n              <td id=\"tital1\"><b>Product Group</b></td>\r\n              <td>\r\n                <select id=\"cars\" name=\"productGroup\" className=\"form-control form-select\">\r\n                <option value=\"\" disabled selected>Select Product Group</option>\r\n                  {options.map(option => (\r\n                    <option key={option.id} value={option.value}>\r\n                        {option.label}\r\n                    </option>\r\n                ))}\r\n                </select>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td id=\"tital\"><b>Product Manufacturer</b></td>\r\n              <td><select id=\"cars\" name=\"productManufacturer\" className=\"form-control form-select\">\r\n              <option value=\"\" disabled selected>Select Product Manufacturer</option>  \r\n              {option2.map(name => (\r\n                    <option key={name.id} value={name.value}>\r\n                        {name.label}\r\n                    </option>\r\n                ))}\r\n              </select></td>\r\n              <td id=\"tital1\"><b>STATUS</b></td>\r\n              <td id=\"radioButton\"><input type=\"radio\" id=\"html\" name=\"productStatus\"\r\n                onChange={(e) => handleInputChange(e)} value=\"true\" checked />\r\n                &nbsp;<label htmlFor=\"html\">Enable</label> &nbsp;&nbsp;&nbsp;&nbsp;\r\n                <input type=\"radio\" id=\"css\" value=\"false\" name=\"productStatus\"\r\n                  onChange={(e) => handleInputChange(e)} />\r\n                &nbsp;<label htmlFor=\"css\">Disable</label>\r\n              </td>\r\n            </tr>\r\n            <tr id=\"submitTr\">\r\n              <th colSpan=\"4\" id=\"actionButton\"><button type=\"submit\">SUBMIT</button></th>\r\n            </tr>\r\n\r\n          </tbody>\r\n\r\n        </table>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductAdd","E:\\FrantEndProject\\pharmacy\\src\\components\\AddProductGroup.js",[],[],"E:\\FrantEndProject\\pharmacy\\src\\components\\ProductCategory.js",[],[],"E:\\FrantEndProject\\pharmacy\\src\\components\\ProductManufacturer.js",[],[],"E:\\FrantEndProject\\pharmacy\\src\\components\\PurchaseDetails.js",["77","78","79","80","81"],[],"E:\\FrantEndProject\\pharmacy\\src\\components\\Header.js",[],[],{"ruleId":"82","severity":1,"message":"83","line":11,"column":8,"nodeType":"84","endLine":11,"endColumn":10,"suggestions":"85"},{"ruleId":"82","severity":1,"message":"83","line":28,"column":6,"nodeType":"84","endLine":28,"endColumn":8,"suggestions":"86"},{"ruleId":"82","severity":1,"message":"87","line":22,"column":6,"nodeType":"84","endLine":22,"endColumn":8,"suggestions":"88"},{"ruleId":"89","severity":1,"message":"90","line":27,"column":61,"nodeType":"91","messageId":"92","endLine":27,"endColumn":62},{"ruleId":"89","severity":1,"message":"90","line":58,"column":70,"nodeType":"91","messageId":"92","endLine":58,"endColumn":71},{"ruleId":"89","severity":1,"message":"90","line":89,"column":70,"nodeType":"91","messageId":"92","endLine":89,"endColumn":71},{"ruleId":"82","severity":1,"message":"93","line":21,"column":6,"nodeType":"84","endLine":21,"endColumn":8,"suggestions":"94"},{"ruleId":"95","severity":1,"message":"96","line":23,"column":10,"nodeType":"97","messageId":"98","endLine":23,"endColumn":22},{"ruleId":"95","severity":1,"message":"99","line":23,"column":24,"nodeType":"97","messageId":"98","endLine":23,"endColumn":39},{"ruleId":"100","severity":1,"message":"101","line":90,"column":21,"nodeType":"91","messageId":"102","endLine":90,"endColumn":23},{"ruleId":"95","severity":1,"message":"103","line":220,"column":10,"nodeType":"97","messageId":"98","endLine":220,"endColumn":20},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["104"],["105"],"React Hook useEffect has missing dependencies: 'fillProductCategory', 'fillProductGroup', 'fillProductManufacturer', and 'userData.id'. Either include them or remove the dependency array.",["106"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","React Hook useEffect has missing dependencies: 'fillPaymentType', 'findSupplier', and 'userData.id'. Either include them or remove the dependency array.",["107"],"no-unused-vars","'supplierData' is assigned a value but never used.","Identifier","unusedVar","'setSupplierData' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","'canceldata' is assigned a value but never used.",{"desc":"108","fix":"109"},{"desc":"108","fix":"110"},{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},"Update the dependencies array to be: [navigate]",{"range":"115","text":"116"},{"range":"117","text":"116"},"Update the dependencies array to be: [fillProductCategory, fillProductGroup, fillProductManufacturer, userData.id]",{"range":"118","text":"119"},"Update the dependencies array to be: [fillPaymentType, findSupplier, userData.id]",{"range":"120","text":"121"},[280,282],"[navigate]",[811,813],[646,648],"[fillProductCategory, fillProductGroup, fillProductManufacturer, userData.id]",[549,551],"[fillPaymentType, findSupplier, userData.id]"]